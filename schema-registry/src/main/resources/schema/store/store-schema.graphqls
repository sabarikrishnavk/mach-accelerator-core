type Query {
    locations(locationids: [String]): [Location]
    shippingmethods(shippingmethodids:[String]): [ShippingMethod]
}
type Mutation {
    savelocations(location: SaveLocation!): Location
}
input SaveLocation{
    locationid: String!
    name: String!
    locationcode:String!
    address1 : String!
    address2: String!
    address3: String!
    city: String!
    state: String!
    country: String!
    zipcode: String!
    phonenumber: String!
}
type ShippingMethod @key(fields: "shipmethod"){
    shipmethod: String!
    name: String!
    shippingvia: [ShippingVia]
}
type ShippingVia{
    vendor : String!
    shippingmethod: String!
    shippingcode: String!
    price: Float!
    rank: Int!
}

type Location @key(fields: "locationid"){
    locationid: String!
    name: String!
    locationcode:String!
    address:LocationAddress
    operationhours:[OperationHours]
}

type LocationAddress{
    address1 : String!
    address2: String!
    address3: String!
    city: String!
    state: String!
    country: String!
    zipcode: String!
    phonenumber: String!
}
type OperationHours{
    day : String!
    starttime: String!
    endtime: String!
    description: String
}

scalar DateTime
#scalar Upload
#directive @skipcodegen on FIELD_DEFINITION